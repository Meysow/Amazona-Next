@mixin bg-gradient {
    background: linear-gradient(
        61.8deg,
        rgba($color-dark, 1) 0%,
        rgba($color-primary, 1) 33%,
        rgba($color-secondary, 1) 100%
    );
}

@mixin breakpoint($breakpoint) {
    @if map-has-key($breakpoints, $breakpoint) {
        @media (min-width: #{map-get($breakpoints, $breakpoint)}) {
            @content;
        }
    } @else {
        @warn 'Unfortunately, no value could be retrieved from `#{$breakpoint}`. '
      + 'Please make sure it is defined in `$grid-breakpoints` map.';
    }
}

@mixin content-width {
    width: 100%;
    max-width: map_get($container-max-widths, xs);
    padding: 3rem 1rem;

    @include breakpoint('sm') {
        max-width: map_get($container-max-widths, sm);
    }

    @include breakpoint('md') {
        max-width: map_get($container-max-widths, md);
    }

    @include breakpoint('lg') {
        max-width: map_get($container-max-widths, lg);
    }

    @include breakpoint('xl') {
        max-width: map_get($container-max-widths, xl);
    }
}

@mixin grid-product {
    display: grid;
    grid-template-columns: repeat(1, minmax(200px, 1fr));
    gap: 2rem;
    padding: 1rem;

    @include breakpoint('sm') {
        grid-template-columns: repeat(2, minmax(200px, 1fr));
        gap: 2.3rem;
        padding: 1.5rem;
    }

    @include breakpoint('md') {
        grid-template-columns: repeat(3, minmax(200px, 1fr));
        gap: 3rem;
        padding: 2rem 1.5rem;
    }

    @include breakpoint('lg') {
        padding: 2.5rem 2rem;
        gap: 3.7rem;
    }

    @include breakpoint('xl') {
    }
}
